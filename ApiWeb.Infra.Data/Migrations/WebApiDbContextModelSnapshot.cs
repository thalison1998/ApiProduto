// <auto-generated />
using System;
using ApiWeb.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiWeb.Infra.Data.Migrations
{
    [DbContext(typeof(WebApiDbContext))]
    partial class WebApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApiWeb.Domain.EntidadeAbstract.Operacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp")
                        .HasColumnName("data_criacao");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("discriminator");

                    b.Property<Guid>("RegistroFinanceiroId")
                        .HasColumnType("uuid")
                        .HasColumnName("registro_financeiro_id");

                    b.Property<int>("TipoFinanceiro")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_financeiro");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_operacao");

                    b.HasIndex("RegistroFinanceiroId")
                        .HasDatabaseName("ix_operacao_registro_financeiro_id");

                    b.ToTable("operacao", "sistema");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Operacao");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ApiWeb.Domain.Entidades.GrupoRegistroFinanceiro.RegistroFinanceiro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp")
                        .HasColumnName("data_criacao");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_total");

                    b.HasKey("Id")
                        .HasName("pk_registro_financeiro");

                    b.ToTable("registro_financeiro", "sistema");
                });

            modelBuilder.Entity("ApiWeb.Domain.Entidades.RegistroFinanceiro.OperacaoEntrada", b =>
                {
                    b.HasBaseType("ApiWeb.Domain.EntidadeAbstract.Operacao");

                    b.ToTable("operacao", "sistema");

                    b.HasDiscriminator().HasValue("OperacaoEntrada");
                });

            modelBuilder.Entity("ApiWeb.Domain.Entidades.RegistroFinanceiro.OperacaoSaida", b =>
                {
                    b.HasBaseType("ApiWeb.Domain.EntidadeAbstract.Operacao");

                    b.ToTable("operacao", "sistema");

                    b.HasDiscriminator().HasValue("OperacaoSaida");
                });

            modelBuilder.Entity("ApiWeb.Domain.EntidadeAbstract.Operacao", b =>
                {
                    b.HasOne("ApiWeb.Domain.Entidades.GrupoRegistroFinanceiro.RegistroFinanceiro", "RegistroFinanceiro")
                        .WithMany("Operacoes")
                        .HasForeignKey("RegistroFinanceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_operacao_registro_financeiro_registro_financeiro_id");

                    b.Navigation("RegistroFinanceiro");
                });

            modelBuilder.Entity("ApiWeb.Domain.Entidades.GrupoRegistroFinanceiro.RegistroFinanceiro", b =>
                {
                    b.Navigation("Operacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
